// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type WorkbookWorksheetProtectionOptions.
    /// </summary>
    [DataContract]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class WorkbookWorksheetProtectionOptions
    {
    
        /// <summary>
        /// Gets or sets allowAutoFilter.
        /// </summary>
        [DataMember(Name = "allowAutoFilter", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowAutoFilter { get; set; }
    
        /// <summary>
        /// Gets or sets allowDeleteColumns.
        /// </summary>
        [DataMember(Name = "allowDeleteColumns", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowDeleteColumns { get; set; }
    
        /// <summary>
        /// Gets or sets allowDeleteRows.
        /// </summary>
        [DataMember(Name = "allowDeleteRows", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowDeleteRows { get; set; }
    
        /// <summary>
        /// Gets or sets allowFormatCells.
        /// </summary>
        [DataMember(Name = "allowFormatCells", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowFormatCells { get; set; }
    
        /// <summary>
        /// Gets or sets allowFormatColumns.
        /// </summary>
        [DataMember(Name = "allowFormatColumns", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowFormatColumns { get; set; }
    
        /// <summary>
        /// Gets or sets allowFormatRows.
        /// </summary>
        [DataMember(Name = "allowFormatRows", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowFormatRows { get; set; }
    
        /// <summary>
        /// Gets or sets allowInsertColumns.
        /// </summary>
        [DataMember(Name = "allowInsertColumns", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowInsertColumns { get; set; }
    
        /// <summary>
        /// Gets or sets allowInsertHyperlinks.
        /// </summary>
        [DataMember(Name = "allowInsertHyperlinks", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowInsertHyperlinks { get; set; }
    
        /// <summary>
        /// Gets or sets allowInsertRows.
        /// </summary>
        [DataMember(Name = "allowInsertRows", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowInsertRows { get; set; }
    
        /// <summary>
        /// Gets or sets allowPivotTables.
        /// </summary>
        [DataMember(Name = "allowPivotTables", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowPivotTables { get; set; }
    
        /// <summary>
        /// Gets or sets allowSort.
        /// </summary>
        [DataMember(Name = "allowSort", EmitDefaultValue = false, IsRequired = false)]
        public bool? AllowSort { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}
