// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.Graph
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;

    /// <summary>
    /// The interface IWorkbookChartFillRequest.
    /// </summary>
    public partial interface IWorkbookChartFillRequest : IBaseRequest
    {
        /// <summary>
        /// Creates the specified WorkbookChartFill using PUT.
        /// </summary>
        /// <param name="workbookChartFillToCreate">The WorkbookChartFill to create.</param>
        /// <returns>The created WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> CreateAsync(WorkbookChartFill workbookChartFillToCreate);        /// <summary>
        /// Creates the specified WorkbookChartFill using PUT.
        /// </summary>
        /// <param name="workbookChartFillToCreate">The WorkbookChartFill to create.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The created WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> CreateAsync(WorkbookChartFill workbookChartFillToCreate, CancellationToken cancellationToken);

        /// <summary>
        /// Deletes the specified WorkbookChartFill.
        /// </summary>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync();

        /// <summary>
        /// Deletes the specified WorkbookChartFill.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The task to await.</returns>
        System.Threading.Tasks.Task DeleteAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Gets the specified WorkbookChartFill.
        /// </summary>
        /// <returns>The WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> GetAsync();

        /// <summary>
        /// Gets the specified WorkbookChartFill.
        /// </summary>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> GetAsync(CancellationToken cancellationToken);

        /// <summary>
        /// Updates the specified WorkbookChartFill using PATCH.
        /// </summary>
        /// <param name="workbookChartFillToUpdate">The WorkbookChartFill to update.</param>
        /// <returns>The updated WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> UpdateAsync(WorkbookChartFill workbookChartFillToUpdate);

        /// <summary>
        /// Updates the specified WorkbookChartFill using PATCH.
        /// </summary>
        /// <param name="workbookChartFillToUpdate">The WorkbookChartFill to update.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/> for the request.</param>
        /// <returns>The updated WorkbookChartFill.</returns>
        System.Threading.Tasks.Task<WorkbookChartFill> UpdateAsync(WorkbookChartFill workbookChartFillToUpdate, CancellationToken cancellationToken);

        /// <summary>
        /// Adds the specified expand value to the request.
        /// </summary>
        /// <param name="value">The expand value.</param>
        /// <returns>The request object to send.</returns>
        IWorkbookChartFillRequest Expand(string value);

        /// <summary>
        /// Adds the specified select value to the request.
        /// </summary>
        /// <param name="value">The select value.</param>
        /// <returns>The request object to send.</returns>
        IWorkbookChartFillRequest Select(string value);

    }
}
